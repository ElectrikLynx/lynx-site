---
interface Props {
  className?: string;
  variant: "primary" | "secondary" | "form";
  navigateTo?: string;
}

let { variant = "primary", className, navigateTo } = Astro.props;

const styles = {
  hover: "",
  active: "",
  base: "text-heading-3 bg-sub-background",
};
---

<a href={navigateTo}>
  <button class:list={[className, "button-1", styles.base]}>
    <slot />
  </button>
</a>
<style>
  .button-1 {
    border: 2px solid transparent;
    padding: 10px 0px;
    -webkit-transition: all 0.15s ease-in-out;
    transition: all 0.15s ease-in-out;
    border-radius: 50px;
  }
  .button-1:hover {
    background-color: transparent;
    font-weight: 400;
    border: 1px solid #e57c29;
    transition: all 0.15s ease-in-out;
    box-shadow:
      0 0 2px 0 #e57c29 inset,
      0 0 10px 2px #e57c29;
    border: 2px solid #e57c29;
  }
  .button-1:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
  }
</style>
