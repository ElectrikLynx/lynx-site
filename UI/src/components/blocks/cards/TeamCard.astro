---
import type { ImageData } from "@tsTypes/index";

import Button from "@components/shared/Button.astro";
import { Text, ProfileImages } from "@components/shared";
import { ElectricLine } from "@components/svgs";

interface Props {
  varient?: string;
  teamName: string;
  contact?: string;
  description: string;
  primaryPicture: ImageData;
  secondaryPicture: ImageData;
  portfolioLink: string;
}

const {
  varient,
  contact,
  teamName,
  description,
  primaryPicture,
  secondaryPicture,
  portfolioLink,
} = Astro.props;

const visualSetting = new Set(["images", "name", "profileURL", "description"]);

// varients types, default is all, simple = image | name | email

function resolveVarient(varientType: string) {
  if (varientType === "simple") {
    visualSetting.delete("description");
    visualSetting.delete("profileURL");
    visualSetting.add("contact");
  }

  return;
}
resolveVarient(varient);
---

<div
  class="card-container p-6 rounded-md shadow-md flex flex-col justify-between"
>
  <!-- Top Section -->
  <ProfileImages imagesSelections={[primaryPicture, secondaryPicture]} />

  <!-- Bottom Section -->
  <div class="flex flex-col gap-4 pt-4">
    <Text tag="h3">
      {teamName}
    </Text>
    {
      visualSetting.has("description") ? (
        <Text tag="p">{description}</Text>
      ) : null
    }
  </div>
  {
    visualSetting.has("profileURL") ? (
      <div class="mt-4 flex flex-col items-end text-heading-3">
        <a href={portfolioLink}>
          <span class="flex flex-col justify-center">
            <b>{`${teamName.split(" ")[0]}'s Portfolio`}</b>
            <ElectricLine w="120" h="20" />
          </span>
        </a>
      </div>
    ) : null
  }
  {
    visualSetting.has("contact") ? (
      <div class="mt-4 flex flex-col text-heading-3">
        <a href={`mailto:${contact}`}>
          <span class="flex flex-col justify-center">
            <b>{contact}</b>
            <ElectricLine w="120" h="20" />
          </span>
        </a>
      </div>
    ) : null
  }
  <style>
    .card-container {
      max-width: 400px; /* Adjust the maximum width as needed */
    }

    .secondary-image {
      transition: opacity 0.3s ease;
    }

    .secondary-image:hover {
      opacity: 0;
    }
  </style>
</div>
